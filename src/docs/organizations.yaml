paths:
  /api/organizations:
    get:
      summary: gets all organizations
      tags:
        - Organizations
      responses:
        "200":
          description: organizations successfully retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Organization"
    post:
      summary: creates a organization
      tags:
        - Organizations
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#components/requestBodies/createOrganization"
      responses:
        "201":
          description: organization created succesfully
  /api/organizations/{oid}:
    parameters:
      - name: oid
        in: path
        required: true
        description: organization id
        schema:
          $type: string
    get:
      summary: finds one organization by id
      tags:
        - Organizations
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "403":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    put:
      summary: updates an organization by id
      tags:
        - Organizations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/createOrganization"
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "403":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    delete:
      summary: deletes an organization by id
      tags:
        - Organizations
      responses:
        "200":
          $ref: "#/components/responses/SuccessNoPayload"
        "403":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"

components:
  schemas:
    Organization:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        description:
          type: string
        email:
          type: string
        phone:
          type: string
        address:
          type: string
        website:
          type: string
        logo:
          type: string
        categories:
          type: array
          description: social causes the organization supports
        location:
          type: string
          description: city in which the organization is located
      example:
        id: "SDF13VDS1FGB5"
        name: "Animalia"
        description: "We defent wildlife conservation"
        email: "testingemail@gmail.com"
        phone: "+131845182165"
        address: "4606 May Street"
        logo: "https://www.image.com"
        categories: ["animal conservation"]
        location: "Mexico City, Mexico"
    Success:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        payload:
          $ref: "#/components/schemas/Organization"
      required:
        - code
        - message
        - payload
    SuccessNoPayload:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
  requestBodies:
    createOrganization:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        email:
          type: string
        phone:
          type: string
        address:
          type: string
        website:
          type: string
        logo:
          type: string
          format: binary
        categories:
          type: array
          description: social causes the organization supports
        location:
          type: string
          description: city in which the organization is located
      example:
        name: "Animalia"
        description: "We defent wildlife conservation"
        email: "testingemail@gmail.com"
        phone: "+131845182165"
        address: "4606 May Street"
        logo: "https://www.image.com"
        categories: ["animal conservation"]
        location: "Mexico City, Mexico"
  responses:
    Success:
      description: Success
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Success"
    SuccessNoPayload:
      description: Success
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SuccessNoPayload"
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Unauthorized:
      description: User has no access to this resource
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
